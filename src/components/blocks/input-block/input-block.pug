mixin create-input-block(params = {})
	
	//- default values
	-	
		const {
			placeholder = 'Enter placeholder',
			textField = 'Enter textField',
			condition = 'Enter condition',
			maskMode = '',
			size = '',
			borderColor = 'dark-25',
			placeholderColor = 'dark-25',
			arrowType = false,
			dropdownType = 'default',
			dropdownParagraphs = ['спальни', 'кровати', 'ванные комнаты'],
			placeholderMode = 'default', 
		} = params

	//- block
	-
		const inputBlockSizeClass = size=='' ? '' : `input-block_size_${size}`
		const inputBlockItemsClass = 'input-block__input-items'
		const borderColorClass = `input-block__input-items_border-color_${borderColor}`
		const placeholderColorClass = placeholderColor!='dark-25' ? `input-block__input-item_placeholder-color_${placeholderColor}` : ''
		const inputBlockItemCursor = arrowType == 'dropdown' ? 'input-block__input-item_cursor-type_dropdown' : ''
		const arrowClass = arrowType ? `input-block__arrow input-block__arrow_type_${arrowType}` : ''

	//-variables
	-
		const readonly = arrowType == 'dropdown' ? true : false

	//- block
	if dropdownType != 'calendar'
		div(class=`input-block ${inputBlockSizeClass}`)
			//header
			if textField!=0||condition!=0
				.input-block__heading
					label.input-block__text-field=textField
					if condition 
						label.input-block__condition=condition

			//input
			label(class=`${inputBlockItemsClass} ${borderColorClass}`)
				//input
				input()&attributes({
					'data-placeholder-mode': placeholderMode,
					'data-mask-mode': maskMode,
					placeholder: placeholder,
					readonly: readonly,
					class: ['input-block__input-item',
						`${placeholderColorClass}`,
						`${inputBlockItemCursor}`,
					]
				})
				//arrow
				if arrowType
					div(class=arrowClass)

			//dropdown counter
			if dropdownType == 'counter'
				.input-block__dropdown-counter
					each paragraph in dropdownParagraphs
						.input-block__dropdown-counter-paragraph
							.input-block__dropdown-counter-paragraph-text=paragraph
							.input-block__dropdown-counter-buttons
								span.input-block__dropdown-counter-button.input-block__dropdown-counter-button_type_minus -
								span.input-block__dropdown-counter-button-text 0
								span.input-block__dropdown-counter-button.input-block__dropdown-counter-button_type_plus +	
					if size == 'big'
						.input-block__managers-buttons
							.input-block__button-clear.input-block__button-clear_hided Очистить
							.input-block__button-apply Применить

	if dropdownType == 'calendar'
		div(class=`input-block ${inputBlockSizeClass}`)
			.input-block__inputs-wrapper
				.input-block__input-wrapper
					//header
					if textField!=0||condition!=0
						.input-block__heading
							label.input-block__text-field=textField[0]
							if condition 
								label.input-block__condition=condition

					//input
					label(class=`${inputBlockItemsClass} ${borderColorClass}`)
						//input
						input()&attributes({
							'data-placeholder-mode': placeholderMode,
							'data-mask-mode': maskMode,
							'data-dropdown-type': dropdownType,
							placeholder: placeholder,
							readonly: readonly,
							class: ['input-block__input-item',
								`${placeholderColorClass}`,
								`${inputBlockItemCursor}`
							]
						})
						//arrow
						div(class=arrowClass)

				.input-block__input-wrapper
					//header
					if textField!=0||condition!=0
						.input-block__heading
							label.input-block__text-field=textField[1]
							if condition 
								label.input-block__condition=condition

					//input
					label(class=`${inputBlockItemsClass} ${borderColorClass}`)
						//input
						input()&attributes({
							'data-placeholder-mode': placeholderMode,
							'data-mask-mode': maskMode,
							'data-dropdown-type': dropdownType,
							placeholder: placeholder,
							readonly: readonly,
							class: ['input-block__input-item',
								`${placeholderColorClass}`,
								`${inputBlockItemCursor}`
							]
						})
						//arrow
						div(class=arrowClass)
			.input-block__dropdown-calendar
				+ create-calendar()
//- Call mixin //
//- placeholder: Enter placeholder
//- placeHolderMode(default - 'default'): 'default', 'counter'
//- textField: Enter text field 
//- condition: Enter condition, false
//- maskMode: 'default', 'date'
//- size: big, medium, small,
//- borderColor(default - dark-25): dark-50
//- placeholderColor(default - dark-25): dark-75
//- arrowType(default - false): dropdown, forward
//- dropdownType: 'default', 'counter', 'calendar'
//- dropdownParagraphs(default - false): [Enter paragraphs,...]