mixin create-input-block(params = {})
	
	//- default values
	-	
		const {
			placeholder = 'Enter placeholder',
			textField = 'Enter textField',
			condition = 'Enter condition',
			maskMode = '',
			size = '',
			borderColor = 'dark-25',
			placeholderColor = 'dark-25',
			arrowType = false,
			dropdownType = 'default',
			dropdownParagraphs = ['спальни', 'кровати', 'ванные комнаты'],
			placeholderMode = 'default', 
		} = params

	//- block
	-
		const inputBlockSizeClass = size=='' ? '' : `input-block_size_${size}`
		const inputBlockItemsClass = 'input-block__input-items'
		const borderColorClass = borderColor!='dark-25' ? `input-block__input-items_border-color_${borderColor}` : ''
		const placeholderColorClass = placeholderColor!='dark-25' ? `input-block__input-item_placeholder-color_${placeholderColor}` : ''
		const inputBlockItemCursor = arrowType == 'dropdown' ? 'input-block__input_cursor_pointer' : ''
		const arrowClass = arrowType ? `input-block__arrow input-block__arrow_type_${arrowType}` : ''

	//-variables
	-
		const readonly = arrowType == 'dropdown' ? true : false

	//- block
	div(class=`input-block ${inputBlockSizeClass}`)
		//header
		if textField!=0||condition!=0
			.input-block__heading
				label.input-block__text-field=textField
				if condition 
					label.input-block__condition=condition
		label(class=`${inputBlockItemsClass} ${borderColorClass}`)
			//input
			input()&attributes({
				'data-placeholder-mode': placeholderMode,
				'data-mask-mode': maskMode,
				placeholder: placeholder,
				readonly: readonly,
				class: ['input-block__input-item',
					`${placeholderColorClass}`,
					`${inputBlockItemCursor}`
				]
			})
			//arrow
			if arrowType
				div(class=arrowClass)

		//dropdown
		if dropdownType == 'counter'
			.input-block__dropdown
				each paragraph in dropdownParagraphs
					.input-block__dropdown-paragraph
						.input-block__dropdown-paragraph-text=paragraph
						.input-block__dropdown-buttons
							.input-block__dropdown-button.input-block__dropdown-button_type_minus -
							span.input-block__dropdown-button-text 0
							.input-block__dropdown-button.input-block__dropdown-button_type_plus +	
				if size == 'big'
					.input-block__managers-buttons
						.input-block__button-clear.input-block__button-clear_hided Очистить
						.input-block__button-apply Применить

//- Call mixin //
//- placeholder: Enter placeholder
//- textField: Enter text field 
//- condition: Enter condition, false
//- size: big, medium, small,
//- borderColor(default - dark-25): dark-50
//- placeholderColor(default - dark-25): dark-75
//- arrowType(default - false): dropdown, forward
//- dropdownType = 'counter'
//- dropdownParagraphs(default - false): [Enter paragraphs,...]
//- placeHolderMode(default - 'default'): 'default', 'counter'